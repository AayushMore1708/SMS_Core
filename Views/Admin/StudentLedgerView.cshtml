@model IEnumerable<SMS_Core.Models.tblFeePayment>
    @{
            // Layout = null;

    }
    <!DOCTYPE html>

    <html>

    <head>
        <meta charset="utf-8" />
        <title>Student Ledger for the Academic Year @ViewBag.ayr</title>
        <meta name="viewport" content="width=device-width" />


        <link rel="stylesheet" href="~/Content/css/tinystyle.css" type="text/css" media="all" />
        <link rel="stylesheet" href="~/Content/css/print.css" type="text/css" media="print" />


        <style type="text/css" media="print">
            .pagebreak {
                page-break-before: always;
            }

            .button {
                display: none
            }

            .watermark {
                /* Used to position the watermark */
                position: relative;
            }

            .watermark__inner {
                /* Center the content */
                align-items: center;
                display: flex;
                justify-content: center;
                /* Absolute position */
                left: 10px;
                position: absolute;
                top: 0px;
                /* Take full size */
                height: 100%;
                width: 100%;
            }

            .watermark__body {
                /* Text color */
                color: rgba(0, 0, 0, 0.2) !important;
                /* Text styles */
                font-size: 3rem;
                font-weight: bold;
                text-transform: uppercase;
                /* Rotate the text */
                transform: rotate(-45deg);
                /* Disable the selection */
                user-select: none;
            }
        </style>
        <style type="text/css" media="screen">
            .button {
                padding: 5px 10px;
                display: inline;
                background: #777 url(../Content/img/button.png) repeat-x bottom;
                border: none;
                color: #fff;
                cursor: pointer;
                font-weight: bold;
                border-radius: 5px;
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                text-shadow: 1px 1px #666;
            }

            .watermark {
                /* Used to position the watermark */
                position: relative;
            }

            .watermark__inner {
                /* Center the content */
                align-items: center;
                display: flex;
                justify-content: center;
                /* Absolute position */
                left: 0px;
                position: absolute;
                top: 0px;
                /* Take full size */
                height: 100%;
                width: 100%;
            }

            .watermark__body {
                /* Text color */
                color: rgba(0, 0, 0, 0.4);
                /* Text styles */
                font-size: 3rem;
                font-weight: bold;
                text-transform: uppercase;
                /* Rotate the text */
                transform: rotate(-45deg);
                /* Disable the selection */
                user-select: none;
            }

            Page {
                margin: 0mm 0mm 0mm 0mm;
                font-family: Verdana "Lucida Grande", helvetica, sans-serif;
                font-size: 10px
            }
        </style>



        <script type="text/javascript">
            function NumberToWords() {

                var units = ["", "One", "Two", "Three", "Four", "Five", "Six",
                    "Seven", "Eight", "Nine", "Ten"];
                var teens = ["Eleven", "Twelve", "Thirteen", "Fourteen", "Fifteen",
                    "Sixteen", "Seventeen", "Eighteen", "Nineteen", "Twenty"];
                var tens = ["", "Ten", "Twenty", "Thirty", "Forty", "Fifty", "Sixty",
                    "Seventy", "Eighty", "Ninety"];

                var othersIndian = ["Thousand", "Lakh", "Crore"];

                var othersIntl = ["Thousand", "Million", "Billion", "Trillion"];

                var INDIAN_MODE = "indian";
                var INTERNATIONAL_MODE = "international";
                var currentMode = INDIAN_MODE;

                var getBelowHundred = function (n) {
                    if (n >= 100) {
                        return "greater than or equal to 100";
                    };
                    if (n <= 10) {
                        return units[n];
                    };
                    if (n <= 20) {
                        return teens[n - 10 - 1];
                    };
                    var unit = Math.floor(n % 10);
                    n /= 10;
                    var ten = Math.floor(n % 10);
                    var tenWord = (ten > 0 ? (tens[ten] + " ") : '');
                    var unitWord = (unit > 0 ? units[unit] : '');
                    return tenWord + unitWord;
                };

                var getBelowThousand = function (n) {
                    if (n >= 1000) {
                        return "greater than or equal to 1000";
                    };
                    var word = getBelowHundred(Math.floor(n % 100));

                    n = Math.floor(n / 100);
                    var hun = Math.floor(n % 10);
                    word = (hun > 0 ? (units[hun] + " Hundred ") : '') + word;

                    return word;
                };

                return {
                    numberToWords: function (n) {
                        if (isNaN(n)) {
                            return "Not a number";
                        };

                        var word = '';
                        var val;

                        val = Math.floor(n % 1000);
                        n = Math.floor(n / 1000);

                        word = getBelowThousand(val);

                        if (this.currentMode == INDIAN_MODE) {
                            othersArr = othersIndian;
                            divisor = 100;
                            func = getBelowHundred;
                        } else if (this.currentMode == INTERNATIONAL_MODE) {
                            othersArr = othersIntl;
                            divisor = 1000;
                            func = getBelowThousand;
                        } else {
                            throw "Invalid mode - '" + this.currentMode
                            + "'. Supported modes: " + INDIAN_MODE + "|"
                            + INTERNATIONAL_MODE;
                        };

                        var i = 0;
                        while (n > 0) {
                            if (i == othersArr.length - 1) {
                                word = this.numberToWords(n) + " " + othersArr[i] + " "
                                    + word;
                                break;
                            };
                            val = Math.floor(n % divisor);
                            n = Math.floor(n / divisor);
                            if (val != 0) {
                                word = func(val) + " " + othersArr[i] + " " + word;
                            };
                            i++;
                        };
                        return word;
                    },
                    setMode: function (mode) {
                        if (mode != INDIAN_MODE && mode != INTERNATIONAL_MODE) {
                            throw "Invalid mode specified - '" + mode
                            + "'. Supported modes: " + INDIAN_MODE + "|"
                            + INTERNATIONAL_MODE;
                        };
                        this.currentMode = mode;
                    }
                }
            }


            var num2words = new NumberToWords();

            function translate() {

                var input = 0.0;//Item.TotalAmoutPaying;
                var inputv;
                // inputv = Math.round(parseFloat($("#SalesTaxAmt1").val())) + Math.round(parseFloat($("#SalesTaxAmt2").val()));


                if (isNaN(input)) {
                    $("#errSpan").html("This is not a number - " + input);
                    $("#errSpan").show();
                    // $("#input").focus();
                    return;
                };

                num2words.setMode("indian");
                var indian = num2words.numberToWords(input);
                // alert(indian);
                $("#resultDiv").html(
                    "<b>Rupees " + indian
                    + " Only.</b>");
                // $("#resultDiv").show("slow");
                $("#resultDiv1").html(
                    "<b>Rupees " + indian
                    + " Only.</b>");
            }


        </script>


        <script type="text/javascript">
            function prt() {
                window.print();
                // btnPrint.style.display='none';
                // Email.style.display = 'none';
            }
            $(document).ready(function () {

                translate();
            });

        </script>

    </head>

    <body style="margin-left:10px;margin-top:5px">
        <div class="watermark">
            <!-- Watermark container -->
            <div class="watermark__inner">
                <!-- The watermark -->
                <!-- <div class="watermark__body">Office Copy</div> -->
            </div>

            <!-- Other content -->

            <table width="100%" border="0">
                <tr>
                    <td align="right">
                        <!--  <img src="~/Content/vpm1.jpg" width="105" height="80" /> -->
                    </td>
                    <td valign="top" align="center">
                        <span style="font-size:large"><b> Vidya Prasarak Mandal's VIDYA MANDIR</b></span><br />
                        <!-- BALODYAN/PRIMARY : ENGLISH / MARATHI<br /> -->
                        Student Ledger for the Academic Year @ViewBag.ayr
                    </td>
                </tr>
                <tr>
                    <td>Ref. No.(Feeid) &nbsp;@ViewBag.feeid</td>
                    <td>&nbsp;@ViewBag.StudentName &nbsp;&nbsp; @ViewBag.StudenntCourse
                        &nbsp;&nbsp;@ViewBag.StudentBatch </td>
                    <td></td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>Admission Date</td>
                    <td>@ViewBag.StudentAdmissionDate</td>
                    <td>Year Opn.</td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>Left Date</td>
                    <td>@ViewBag.DateOfLeavingSchool</td>
                    <td>Received</td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>Left Description</td>
                    <td>@ViewBag.ReasonForLeavingSchool</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>Concession Description</td>
                    <td>@ViewBag.GRType</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>Remarks</td>
                    <td>@ViewBag.Remarks</td>
                    <td>&nbsp;</td>
                    <td>&nbsp;</td>
                </tr>

                <tr>
                    <td>&nbsp;</td>
                </tr>
            </table>
            @foreach (var item in Model)
            {
                <table width="100%">
                    <tr>
                        <td colspan="4" style="text-align:center"><b><u>FEE Details</u></b></td>
                    </tr>
                    <tr>
                        <td colspan="4">&nbsp;<br /></td>
                    </tr>
                    <tr>
                        <td>Receipt No : <b>@string.Format("{0:0000}", item.FeeReceiptNo) </b></td>
                        <td>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
                        <td>&nbsp;</td>
                        <td>Receipt Date : <b> @string.Format("{0:dd-MM-yyyy}", item.FeeReceiptDate)</b></td>

                    </tr>

                </table>

                <table width="100%">
                    <tr>
                        <td colspan="2">
                            <table class="table ">
                                <thead>
                                    <tr>
                                        <th>Fee Category</th>

                                        <th>Fee Actual Amount</th>

                                        <th>Discount</th>
                                        <th>Amount Paid</th>
                                    </tr>
                                </thead>
                                @foreach (var lpd in item.tblFeePaymentDTs)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => lpd.FeeCategoryName)</td>

                                        <td>@Html.DisplayFor(modelItem => lpd.FeeActualAmount)</td>


                                        <td>@Html.DisplayFor(modelItem => lpd.FeeDiscount)</td>
                                        <td>@Html.DisplayFor(modelItem => lpd.FeeAmountPaid)</td>

                                    </tr>

                                }
                                <tr>
                                    <td align="right">Total</td>
                                    <td><b>@item.FeeTotalAmount</b></td>

                                    <td align="right">Total</td>
                                    <td><b>@item.TotalAmoutPaying</b></td>
                                </tr>
                                <tr>
                                    <td colspan="4">
                                        <div id="resultDiv"></div>
                                    </td>
                                </tr>
                            </table>
                        </td>

                    </tr>
                    <tr>
                        <td>Mode of Payment : &nbsp;&nbsp;<b>@item.FeeModeofPay </b> </td>
                    </tr>
                    <tr>
                        <td>
                            Remark &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; :
                            &nbsp;&nbsp;<b>@item.FeeRemark</b><br />
                            @if (item.FeeModeofPay == "Cheque")
                            {
                                <text>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(Subject
                                    to realization of cheque)</text>
                            }
                        </td>
                    </tr>
                </table>
            }
        </div>
        <br /><br />
        <!--
    <div id="ds" style="text-align:center" class="printButtonClass">
        <br />
        <a href="#" id="btnPrint" class="button" onclick="prt();">Print</a>
        &nbsp;&nbsp;
    </div>-->
        <br />
        <br />

        <script type="text/javascript">
            $(document).ready(function () {
                $('#footer').hide();
            });

        </script>
    </body>

    </html>